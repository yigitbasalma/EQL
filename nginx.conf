worker_processes  1;


events {
    worker_connections  1024;
}


http {
    log_format rt_cache '$remote_addr - "$upstream_cache_status" [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    access_log   /var/log/nginx/cache.log rt_cache;
    include       mime.types;
    default_type  application/octet-stream;
    perl_modules  perl/lib;

    sendfile        on;

    keepalive_timeout  65;

    upstream backend_upstream {
        # backend sunucu tanımlarınızı burada yapın
    }

    perl_set $backend_server '

        sub {
            my $r = shift;
            my $uri = $r->uri;
            my @command = ("/usr/bin/curl", "http://localhost:5000$uri");
            my $ret = `@command`;
            return $ret
        }

    ';

    #proxy_buffering           on;
    proxy_cache_valid         any 7d;
    proxy_cache_path          /Application/Cache levels=1:2 keys_zone=my-cache:1024m max_size=50g inactive=7d use_temp_path=off;
    #proxy_buffer_size         4k;
    #proxy_buffers             100 8k;

    server {
        listen       80;
        server_name  localhost;

        location / {
            deny all;
        }

        location /a1 {
            if ( $backend_server ~ "error" ) {
                rewrite "^/a1/(.*)$" /cache_miss/$1 last;
            }
            rewrite "^/a1/(.*)$" /cache_exists/$1 last;
        }

        location /cache_exists {
            internal;
            if ( $backend_server ~ "172\.20\.8\.(79)" ) {
                #rewrite "^/cache_exists/(.*)$" /another_server_redirect/a1/$1 last;
                rewrite "^/cache_exists/(.*)$" $1;
                return 301 http://$backend_server/a1/$1;
            }
            proxy_cache my-cache;
            proxy_cache_valid any 7d;
            #proxy_cache_valid 404 15d;
            proxy_ignore_headers Cache-Control;
            proxy_cache_min_uses 1;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_revalidate on;
            proxy_cache_lock on;
            expires 7d;
            add_header X-Origin-Cache-Server $backend_server;
            proxy_pass http://backend_upstream/imgoptimizer/t;
        }

        location /cache_miss {
            internal;
            proxy_pass http://backend_upstream/imgoptimizer/t;
            proxy_cache my-cache;
            proxy_cache_valid any 7d;
            #proxy_cache_valid 404 15d;
            proxy_ignore_headers Cache-Control;
            proxy_cache_min_uses 1;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_revalidate on;
            proxy_cache_lock on;
            expires 7d;
            add_header  X-Proxy-Cache $upstream_cache_status;
        }

        location /another_server_redirect {
            internal;
            rewrite "^/another_server_redirect/(.*)$" $1 break;
            return 301 http://$backend_server/$1;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
